name: Build, Deploy and Archive

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

permissions:
  contents: write
  pages: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Qt6
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev libgl1-mesa-dev libglu1-mesa-dev

    - name: Install Doxygen
      run: sudo apt-get install doxygen

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Build Documentation
      run: cmake --build ${{github.workspace}}/build --target doc --config ${{env.BUILD_TYPE}}

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@4.1.5
      with:
        branch: gh-pages
        token: ${{ secrets.GITHUB_TOKEN }}
        folder: ${{github.workspace}}/build/doc/html

    - name: Clean build directory
      run: rm -rf ${{github.workspace}}/build

    - name: Archive Repo
      run: |
        sleep 10
        tar -czvf /tmp/repository-archive.tgz .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: /tmp/repository-archive.tgz
        asset_name: repository-archive.tgz
        asset_content_type: application/gzip
