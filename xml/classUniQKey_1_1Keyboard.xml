<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classUniQKey_1_1Keyboard" kind="class" language="C++" prot="public">
    <compoundname>UniQKey::Keyboard</compoundname>
    <includes refid="Keyboard_8h" local="no">Keyboard.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classUniQKey_1_1Keyboard_1a99e473e396006ad895a906c524b714e3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classUniQKey_1_1Key" kindref="compound">Key</ref> &gt;</type>
        <definition>std::vector&lt;Key&gt; UniQKey::Keyboard::mKeys</definition>
        <argsstring></argsstring>
        <name>mKeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="199" column="21" bodyfile="UniQKey/Keyboard.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1ab3abef6110e8e1b2c14cf43a883210f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classUniQKey_1_1Key" kindref="compound">Key</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Key&gt;&amp; UniQKey::Keyboard::getKeys</definition>
        <argsstring>() const</argsstring>
        <name>getKeys</name>
        <briefdescription>
<para>Returns the keys of the keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The keys of the keyboard. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="69" column="34" bodyfile="UniQKey/Keyboard.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1ad52bbc92992aee6bcae1300cac7ff7af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void UniQKey::Keyboard::serialize</definition>
        <argsstring>(QFile &amp;file)</argsstring>
        <name>serialize</name>
        <param>
          <type>QFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Serializes the keyboard into a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to serialize the keyboard into.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You can serialize multiple keyboards into the same file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="80" column="21" bodyfile="UniQKey/Keyboard.h" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1a15db5f1ccdd5e8d3c71d06bd5d2e094f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void UniQKey::Keyboard::deserialize</definition>
        <argsstring>(QFile &amp;file)</argsstring>
        <name>deserialize</name>
        <param>
          <type>QFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Deserializes the keyboard from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to deserialize the keyboard from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You can deserialize mutliple keyboards from a same file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="95" column="21" bodyfile="UniQKey/Keyboard.h" bodystart="95" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1a41865f8d78a127407dbab849f4d9b027" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QString &gt;</type>
        <definition>QList&lt; QString &gt; UniQKey::Keyboard::getOperatingSystemKeyboards</definition>
        <argsstring>()</argsstring>
        <name>getOperatingSystemKeyboards</name>
        <briefdescription>
<para>Returns a list of keyboards grabbed from the operating system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A list of operating system keyboards. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="112" column="22" bodyfile="UniQKey/Keyboard.default.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1aac22929ea2fc18109cbd48067203f8fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUniQKey_1_1Keyboard" kindref="compound">Keyboard</ref></type>
        <definition>UniQKey::Keyboard UniQKey::Keyboard::getKeyboardFromOperatingSystem</definition>
        <argsstring>(const QString &amp;country, const QString &amp;layout)</argsstring>
        <name>getKeyboardFromOperatingSystem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>country</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
<para>Returns a keyboard based on the country and layout from the operating system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>country</parametername>
</parameternamelist>
<parameterdescription>
<para>The country of the keyboard. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the keyboard. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The keyboard corresponding to the country and layout. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="121" column="25" bodyfile="UniQKey/Keyboard.default.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1a746c9e2827672a0bc81f54b86c61023f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUniQKey_1_1Keyboard" kindref="compound">Keyboard</ref></type>
        <definition>UniQKey::Keyboard UniQKey::Keyboard::getDefaultKeyboardFromOperatingSystem</definition>
        <argsstring>()</argsstring>
        <name>getDefaultKeyboardFromOperatingSystem</name>
        <briefdescription>
<para>Returns the default keyboard from the operating system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The default keyboard from the operating system. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="128" column="25" bodyfile="UniQKey/Keyboard.default.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1a9ba7847788ce47f72f21f044acb1c0e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void UniQKey::Keyboard::exportOperatingSystemKeyboards</definition>
        <argsstring>()</argsstring>
        <name>exportOperatingSystemKeyboards</name>
        <briefdescription>
<para>Exports operating system keyboards to files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="133" column="28" bodyfile="UniQKey/Keyboard.h" bodystart="133" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1ae5c3d5cfed35b21b4377b5be4b2b25d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; QString &gt;</type>
        <definition>static QList&lt;QString&gt; UniQKey::Keyboard::listExportedKeyboards</definition>
        <argsstring>(QString path=&quot;:/&quot;)</argsstring>
        <name>listExportedKeyboards</name>
        <param>
          <type>QString</type>
          <declname>path</declname>
          <defval>&quot;:/&quot;</defval>
        </param>
        <briefdescription>
<para>Lists the exported keyboards. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to look at for keyboards </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of exported keyboards. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="159" column="29" bodyfile="UniQKey/Keyboard.h" bodystart="159" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1a07f906af112069f04f747c5f27620b9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUniQKey_1_1Keyboard" kindref="compound">Keyboard</ref></type>
        <definition>static Keyboard UniQKey::Keyboard::importKeyboard</definition>
        <argsstring>(const QString &amp;name, const QString &amp;layout)</argsstring>
        <name>importKeyboard</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
<para>Imports a keyboard from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the keyboard. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the keyboard. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classUniQKey_1_1Keyboard" kindref="compound">Keyboard</ref> The imported keyboard. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="181" column="32" bodyfile="UniQKey/Keyboard.h" bodystart="181" bodyend="193"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classUniQKey_1_1Keyboard_1af73f749740d5ad9ea00d49552262be31" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UniQKey::Keyboard::Keyboard</definition>
        <argsstring>()=default</argsstring>
        <name>Keyboard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UniQKey/Keyboard.h" line="196" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a keyboard. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="UniQKey/Keyboard.h" line="61" column="5" bodyfile="UniQKey/Keyboard.h" bodystart="61" bodyend="200"/>
    <listofallmembers>
      <member refid="classUniQKey_1_1Keyboard_1a15db5f1ccdd5e8d3c71d06bd5d2e094f" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>deserialize</name></member>
      <member refid="classUniQKey_1_1Keyboard_1a9ba7847788ce47f72f21f044acb1c0e9" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>exportOperatingSystemKeyboards</name></member>
      <member refid="classUniQKey_1_1Keyboard_1a746c9e2827672a0bc81f54b86c61023f" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>getDefaultKeyboardFromOperatingSystem</name></member>
      <member refid="classUniQKey_1_1Keyboard_1aac22929ea2fc18109cbd48067203f8fd" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>getKeyboardFromOperatingSystem</name></member>
      <member refid="classUniQKey_1_1Keyboard_1ab3abef6110e8e1b2c14cf43a883210f1" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>getKeys</name></member>
      <member refid="classUniQKey_1_1Keyboard_1a41865f8d78a127407dbab849f4d9b027" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>getOperatingSystemKeyboards</name></member>
      <member refid="classUniQKey_1_1Keyboard_1a07f906af112069f04f747c5f27620b9a" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>importKeyboard</name></member>
      <member refid="classUniQKey_1_1Keyboard_1af73f749740d5ad9ea00d49552262be31" prot="protected" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>Keyboard</name></member>
      <member refid="classUniQKey_1_1Keyboard_1ae5c3d5cfed35b21b4377b5be4b2b25d1" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>listExportedKeyboards</name></member>
      <member refid="classUniQKey_1_1Keyboard_1a99e473e396006ad895a906c524b714e3" prot="private" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>mKeys</name></member>
      <member refid="classUniQKey_1_1Keyboard_1ad52bbc92992aee6bcae1300cac7ff7af" prot="public" virt="non-virtual"><scope>UniQKey::Keyboard</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
